{"version":3,"sources":["components/AddressForm.js","components/PaymentForm.js","components/Review.js","components/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["AddressForm","react_default","a","createElement","Fragment","Typography_default","variant","gutterBottom","Grid_default","container","spacing","item","xs","sm","TextField_default","required","id","name","label","fullWidth","autoComplete","FormControlLabel_default","control","Checkbox_default","color","value","PaymentForm","md","helperText","products","desc","price","addresses","payments","detail","withStyles","theme","listItem","padding","concat","unit","total","fontWeight","title","marginTop","props","classes","List_default","disablePadding","map","product","ListItem_default","className","key","ListItemText_default","primary","secondary","join","direction","payment","steps","Checkout","state","activeStep","handleNext","_this","setState","handleBack","handleReset","this","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","noWrap","layout","Paper_default","paper","component","align","Stepper_default","stepper","Step_default","StepLabel_default","length","step","components_AddressForm","components_PaymentForm","components_Review","Error","getStepContent","buttons","Button_default","onClick","button","React","Component","Object","defineProperty","width","marginLeft","marginRight","breakpoints","up","marginBottom","display","justifyContent","App","components_Checkout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8cd290c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nfunction AddressForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={24}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"fname\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"lname\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"billing address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"billing address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"billing address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"state\"\r\n            name=\"state\"\r\n            label=\"State/Province/Region\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"billing postal-code\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            autoComplete=\"billing country\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />\r\n            }\r\n            label=\"Use this address for payment details\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddressForm;\r\n","import React from 'react';\r\n\timport Typography from '@material-ui/core/Typography';\r\n\timport Grid from '@material-ui/core/Grid';\r\n\timport TextField from '@material-ui/core/TextField';\r\n\timport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\timport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\tfunction PaymentForm() {\r\n\treturn (\r\n\t<React.Fragment>\r\n\t<Typography variant=\"h6\" gutterBottom>\r\n\tPayment method\r\n\t</Typography>\r\n\t<Grid container spacing={24}>\r\n\t<Grid item xs={12} md={6}>\r\n\t<TextField required id=\"cardName\" label=\"Name on card\" fullWidth />\r\n\t</Grid>\r\n\t<Grid item xs={12} md={6}>\r\n\t<TextField required id=\"cardNumber\" label=\"Card number\" fullWidth />\r\n\t</Grid>\r\n\t<Grid item xs={12} md={6}>\r\n\t<TextField required id=\"expDate\" label=\"Expiry date\" fullWidth />\r\n\t</Grid>\r\n\t<Grid item xs={12} md={6}>\r\n\t<TextField\r\n\trequired\r\n\tid=\"cvv\"\r\n\tlabel=\"CVV\"\r\n\thelperText=\"Last three digits on signature strip\"\r\n\tfullWidth\r\n\t/>\r\n\t</Grid>\r\n\t<Grid item xs={12}>\r\n\t<FormControlLabel\r\n\tcontrol={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n\tlabel=\"Remember credit card details for next time\"\r\n\t/>\r\n\t</Grid>\r\n\t</Grid>\r\n\t</React.Fragment>\r\n\t);\r\n\t}\r\n\r\n\texport default PaymentForm;\r\n","import React from 'react';\r\n\timport PropTypes from 'prop-types';\r\n\timport { withStyles } from '@material-ui/core/styles';\r\n\timport Typography from '@material-ui/core/Typography';\r\n\timport List from '@material-ui/core/List';\r\n\timport ListItem from '@material-ui/core/ListItem';\r\n\timport ListItemText from '@material-ui/core/ListItemText';\r\n\timport Grid from '@material-ui/core/Grid';\r\n\r\n\tconst products = [\r\n\t{ name: 'Product 1', desc: 'A nice thing', price: '$9.99' },\r\n\t{ name: 'Product 2', desc: 'Another thing', price: '$3.45' },\r\n\t{ name: 'Product 3', desc: 'Something else', price: '$6.51' },\r\n\t{ name: 'Product 4', desc: 'Best thing of all', price: '$14.11' },\r\n\t{ name: 'Shipping', desc: '', price: 'Free' },\r\n\t];\r\n\tconst addresses = ['1 Material-UI Drive', 'Reactville', 'Anytown', '99999', 'USA'];\r\n\tconst payments = [\r\n\t{ name: 'Card type', detail: 'Visa' },\r\n\t{ name: 'Card holder', detail: 'Mr John Smith' },\r\n\t{ name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n\t{ name: 'Expiry date', detail: '04/2024' },\r\n\t];\r\n\r\n\tconst styles = theme => ({\r\n\tlistItem: {\r\n\tpadding: `${theme.spacing.unit}px 0`,\r\n\t},\r\n\ttotal: {\r\n\tfontWeight: '700',\r\n\t},\r\n\ttitle: {\r\n\tmarginTop: theme.spacing.unit * 2,\r\n\t},\r\n\t});\r\n\r\n\tfunction Review(props) {\r\n\tconst { classes } = props;\r\n\treturn (\r\n\t<React.Fragment>\r\n\t<Typography variant=\"h6\" gutterBottom>\r\n\tOrder summary\r\n\t</Typography>\r\n\t<List disablePadding>\r\n\t{products.map(product => (\r\n\t<ListItem className={classes.listItem} key={product.name}>\r\n\t<ListItemText primary={product.name} secondary={product.desc} />\r\n\t<Typography variant=\"body2\">{product.price}</Typography>\r\n\t</ListItem>\r\n\t))}\r\n\t<ListItem className={classes.listItem}>\r\n\t<ListItemText primary=\"Total\" />\r\n\t<Typography variant=\"subtitle1\" className={classes.total}>\r\n\t$34.06\r\n\t</Typography>\r\n\t</ListItem>\r\n\t</List>\r\n\t<Grid container spacing={16}>\r\n\t<Grid item xs={12} sm={6}>\r\n\t<Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n\tShipping\r\n\t</Typography>\r\n\t<Typography gutterBottom>John Smith</Typography>\r\n\t<Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n\t</Grid>\r\n\t<Grid item container direction=\"column\" xs={12} sm={6}>\r\n\t<Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n\tPayment details\r\n\t</Typography>\r\n\t<Grid container>\r\n\t{payments.map(payment => (\r\n\t<React.Fragment key={payment.name}>\r\n\t<Grid item xs={6}>\r\n\t<Typography gutterBottom>{payment.name}</Typography>\r\n\t</Grid>\r\n\t<Grid item xs={6}>\r\n\t<Typography gutterBottom>{payment.detail}</Typography>\r\n\t</Grid>\r\n\t</React.Fragment>\r\n\t))}\r\n\t</Grid>\r\n\t</Grid>\r\n\t</Grid>\r\n\t</React.Fragment>\r\n\t);\r\n\t}\r\n\r\n\tReview.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n\t};\r\n\r\n\texport default withStyles(styles)(Review);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 2,\r\n    marginRight: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 3,\r\n    marginBottom: theme.spacing.unit * 3,\r\n    padding: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n      marginTop: theme.spacing.unit * 6,\r\n      marginBottom: theme.spacing.unit * 6,\r\n      padding: theme.spacing.unit * 3\r\n    }\r\n  },\r\n  stepper: {\r\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing.unit * 3,\r\n    marginLeft: theme.spacing.unit\r\n  }\r\n});\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\", \"Review your order\"];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <PaymentForm />;\r\n    case 2:\r\n      return <Review />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nclass Checkout extends React.Component {\r\n  state = {\r\n    activeStep: 0\r\n  };\r\n\r\n  handleNext = () => {\r\n    this.setState(state => ({\r\n      activeStep: state.activeStep + 1\r\n    }));\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState(state => ({\r\n      activeStep: state.activeStep - 1\r\n    }));\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { activeStep } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n              Company name\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <main className={classes.layout}>\r\n          <Paper className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n              Checkout\r\n            </Typography>\r\n            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n              {steps.map(label => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n            <React.Fragment>\r\n              {activeStep === steps.length ? (\r\n                <React.Fragment>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thank you for your order.\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\">\r\n                    Your order number is #2001539. We have emailed your order\r\n                    confirmation, and will send you an update when your order\r\n                    has shipped.\r\n                  </Typography>\r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  {getStepContent(activeStep)}\r\n                  <div className={classes.buttons}>\r\n                    {activeStep !== 0 && (\r\n                      <Button\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={this.handleNext}\r\n                      className={classes.button}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\r\n                    </Button>\r\n                  </div>\r\n                </React.Fragment>\r\n              )}\r\n            </React.Fragment>\r\n          </Paper>\r\n        </main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCheckout.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Checkout);\r\n","import React from \"react\";\r\nimport Checkout from \"./components/Checkout.js\"\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Checkout />\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}